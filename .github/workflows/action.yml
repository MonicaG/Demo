# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request events but only for the "main" branch
  pull_request:
    branches: [ "main" ]

 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  append-to-file:
  
    # The type of runner that the job will run on
    runs-on: ubuntu-latest     

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Debug ref_name
        run: |
          echo "Ref name: ${{ github.head_ref }}"
    
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cached pip dependencies
        uses: actions/cache@v3
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies   
        working-directory: ./.github/scripts/
        run: |
          python -m pip install pip-tools
          python -m pip install -r requirements.txt


      - name: 'Configure git'
      # From https://github.com/orgs/community/discussions/26560#discussioncomment-3531273
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: 'Append to file'    
        run: python ./.github/scripts/file_updater.py ./docs/file1.md

      - name: 'Check for changes'
        id: check_for_changes
        run: |
          CHANGES=$(git status --porcelain)
          if [ -z "$CHANGES" ]; then
              echo "No changes"
              echo "HAS_CHANGES=0" >> $GITHUB_OUTPUT
          else
              echo "Has changes"
              echo "HAS_CHANGES=1" >> $GITHUB_OUTPUT
          fi

      - name: 'Commit changes'
        if: ${{ steps.check_for_changes.outputs.HAS_CHANGES == 1 }}
        run: |
          git status
          git add -A 
          git commit -m "Appended to file"
          git push origin HEAD:${{  github.head_ref }}
  
  check-for-changed-file:
    runs-on: ubuntu-latest     

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Did index.md change?
        id: changed-index-file
        uses: tj-actions/changed-files@v38
        with:
          files: docs/index.md
            
      - name: Create issue if index.md changed
        if: steps.changed-index-file.outputs.any_changed == 'true'
        run: |
          echo "One or more files in the docs folder has changed."
          echo "List all the files that have changed: ${{ steps.changed-index-file.outputs.all_changed_files }}"
          echo "Creating new issue..."
          cat .github/ISSUE_TEMPLATE/file-changed.md | sed -e "s/{{body}}/index.md file changed with PR ${{ github.event.pull_request.number }}/" | github-issue create